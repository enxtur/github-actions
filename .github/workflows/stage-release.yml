name: "Stage Release"

on:
  workflow_call:
    inputs:
      version_type:
        description: "Version type (minor or patch)"
        required: true
        type: string
        default: "patch"
    secrets:
      GH_TOKEN:
        description: "GitHub token"
        required: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install semver
        run: |
          npm install -g semver

      - name: Bump version
        id: version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          CLEAN_VERSION=$(echo "$CURRENT_VERSION" | sed -E 's/-hotfix.*//')
          NEW_VERSION=$(npx semver "$CLEAN_VERSION" -i ${{ inputs.version_type }})
          echo "New version: $NEW_VERSION"
          # npm version "$NEW_VERSION" --no-git-tag-version
          echo "version=v$NEW_VERSION" >> "$GITHUB_OUTPUT"
          echo "branch=release/v$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Setup git config
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Create release branch
        run: |
          git checkout -b ${{ steps.version.outputs.branch }}
          git push --set-upstream origin ${{ steps.version.outputs.branch }}

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          gh pr create --base env/stage \
          --head ${{ steps.version.outputs.branch }} \
          --title ":package: Prepare release \`${{ steps.version.outputs.version }}\` and deploy to stage" \
          --body "This is an automated release PR for version \`${{ steps.version.outputs.version }}\`" \
          --label "deployment"

      - name: Bump version
        run: |
          npm version "$NEW_VERSION" --no-git-tag-version
          git add package.json package-lock.json
          git commit -m ":bookmark: Bump version to \`${{ steps.version.outputs.version }}\`"
          git push